using PBL3.DTO;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace PBL3.BLL
{
    public class BLLMonAn
    {
        QLCHTAN db = new QLCHTAN();

        private string _imageFilePath = @".\image\";

        public string DefaultImage
        {
            get
            {
                return @".\image\default.jpg";
            }
            private set { }
        }

        private static BLLMonAn _Instance;

        public static BLLMonAn Instance
        {
            get
            {
                if (_Instance == null)
                {
                    _Instance = new BLLMonAn();
                }
                return _Instance;
            }
            private set { }
        }

        private BLLMonAn()
        {

        }

        public bool checkAddUpdate(string id)
        {
            bool Add = true;
            try
            {
                if (db.MonAn.Find(id) != null)
                {
                    Add = false;
                }
            }
            catch (Exception ex) { Console.WriteLine(ex.Message); }
            return Add;
        }

        public bool Delete(string id)
        {
            try
            {
                db.MonAn.Find(id).IsDeleted = true;
                db.SaveChanges();
                return true;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return false;
        }

        public string AutoGeneratedId()
        {
            string id_next = "";
            try
            {
                string id_max = db.MonAn.Select(p => p.id_MonAn).ToList().Max();
                if (id_max == null)
                {
                    id_next = "MA001";
                }
                else
                {
                    int max = Convert.ToInt32(id_max.Substring(id_max.Length - 3));
                    max++;
                    id_next = "MA" + ("000" + max).Substring(("000" + max).Length - 3);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return id_next;
        }

        public string CopyImageFile(string sourceFile, string newFileName)
        {
            string extension = ".jpg";
            string newFilePath = Path.Combine(_imageFilePath, newFileName + extension);
            Directory.CreateDirectory(_imageFilePath);
            if (String.Compare(Path.GetFullPath(sourceFile).TrimEnd('\\'), Path.GetFullPath(newFilePath).TrimEnd('\\')) == 0)
            {
                return newFilePath;
            }
            File.Copy(sourceFile, newFilePath, true);
            return newFilePath;
        }

        public bool ExecuteAddUpdate(MonAn t)
        {
            try
            {
                if (checkAddUpdate(t.id_MonAn))
                {
                    String id = AutoGeneratedId();
                    db.MonAn.Add(new MonAn
                    {
                        id_MonAn = id,
                        TenMonAn = t.TenMonAn,
                        GiaNhap = t.GiaNhap,
                        GiaBan = t.GiaBan,
                        SoLuong = 0,
                        imagePath = CopyImageFile(t.imagePath, id),
                    });
                    db.SaveChanges();
                }
                else
                {
                    MonAn ma = db.MonAn.Find(t.id_MonAn);
                    ma.TenMonAn = t.TenMonAn;
                    ma.GiaNhap = t.GiaNhap;
                    ma.GiaBan = t.GiaBan;
                    ma.SoLuong = t.SoLuong;
                    ma.imagePath = CopyImageFile(t.imagePath, t.id_MonAn);
                    db.SaveChanges();
                }
                return true;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return false;
        }

        public List<MonAn_ViewThucDon> GetAllMonAnViewThucDon()
        {
            List<MonAn_ViewThucDon> list = new List<MonAn_ViewThucDon>();
            try
            {
                list = db.MonAn
                        .Where(p => p.IsDeleted == false)
                        .Select(p => new MonAn_ViewThucDon
                        {
                            id_MonAn = p.id_MonAn,
                            TenMonAn = p.TenMonAn,
                            GiaNhap = p.GiaNhap,
                            GiaBan = p.GiaBan
                        })
                        .ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return list;
        }

        public List<MonAn> GetAll()
        {
            List<MonAn> list = new List<MonAn>();
            try
            {
                list = db.MonAn
                        .Where(p => p.IsDeleted == false)
                        .Select(p => p).ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return list;
        }

        public MonAn GetById(string id)
        {
            MonAn monAn = new MonAn();
            try
            {
                monAn = db.MonAn.Find(id);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return monAn;
        }
        public List<MonAn_ViewKho> GetAllMonAnViewKho()
        {
            List<MonAn_ViewKho> list = new List<MonAn_ViewKho>();
            try
            {
                list = db.MonAn
                        .Where(p => p.IsDeleted == false)
                        .Select(p => new MonAn_ViewKho
                        {
                            id_MonAn = p.id_MonAn,
                            TenMonAn = p.TenMonAn,
                            SoLuong = p.SoLuong,
                            GiaNhap = p.GiaNhap,
                            GiaBan = p.GiaBan
                        })
                        .OrderBy(p => p.SoLuong)
                        .ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return list;
        }
        public bool Sell(string id_MonAn, int soLuong)
        {
            try
            {
                MonAn monAn = GetById(id_MonAn);
                ExecuteAddUpdate(new MonAn
                {
                    id_MonAn = monAn.id_MonAn,
                    TenMonAn = monAn.TenMonAn,
                    GiaBan = monAn.GiaBan,
                    GiaNhap = monAn.GiaNhap,
                    SoLuong = monAn.SoLuong - soLuong,
                    imagePath = monAn.imagePath,
                });
                return true;
            }
            catch (Exception ex) { Console.WriteLine(ex.Message); }
            return false;
        }
        public List<MonAn_ViewThucDon> SearchMonAnViewThucDon(string name)
        {
            List<MonAn_ViewThucDon> list = new List<MonAn_ViewThucDon>();
            try
            {
                list = db.MonAn
                        .Where(p => p.IsDeleted == false)
                        .Where(p => p.TenMonAn.Contains(name.ToLower()))
                        .Select(p => new MonAn_ViewThucDon
                        {
                            id_MonAn = p.id_MonAn,
                            TenMonAn = p.TenMonAn,
                            GiaNhap = p.GiaNhap,
                            GiaBan = p.GiaBan
                        })
                        .ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return list;
        }
        public List<MonAn_ViewKho> SearchMonAnViewKho(string name)
        {
            List<MonAn_ViewKho> list = new List<MonAn_ViewKho>();
            try
            {
                list = db.MonAn
                        .Where(p => p.IsDeleted == false)
                        .Where(p => p.TenMonAn.Contains(name.ToLower()))
                        .Select(p => new MonAn_ViewKho
                        {
                            id_MonAn = p.id_MonAn,
                            TenMonAn = p.TenMonAn,
                            SoLuong = p.SoLuong,
                            GiaNhap = p.GiaNhap,
                            GiaBan = p.GiaBan
                        })
                        .OrderBy(p => p.SoLuong)
                        .ToList();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return list;
        }
        public dynamic GetUnderStock()
        {
            return db.MonAn
                .Where(p => p.IsDeleted == false)
                .Where(p => p.SoLuong == 0)
                .Select(p => new { p.id_MonAn, p.TenMonAn }).ToList();
        }
        public int TongMonAn()
        {
            int tong = 0;
            try
            {
                tong = db.MonAn.Where(p => p.IsDeleted == false).Count();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return tong;
        }
    }
}
