using PBL3.DTO;
using PBL3.BLL;
using System;
using System.Collections.Generic;
using System.Windows.Forms;

namespace PBL3.View
{
    public partial class frmOrder : Form
    {
        public delegate void ReloadForm();
        public ReloadForm reloadForm;

        private string id_NhanVien = "";
        double sum = 0;
        List<ChiTietOrder> list_orders;
        List<CBBItem> listItem;
        List<CBBItem> listItemFilter;
        public frmOrder(List<ChiTietOrder> list_orders, string id_NhanVien)
        {
            QLCHTAN db = new QLCHTAN();
            InitializeComponent();
            this.id_NhanVien = id_NhanVien;
            this.list_orders = list_orders;
            this.listItem = new List<CBBItem>();
            this.listItemFilter = new List<CBBItem>();
            foreach (KhachHang i in db.KhachHang)
            {
                listItem.Add(new CBBItem
                {
                    Text = i.SoDienThoai + ", " + i.TenKhachHang,
                    Value = i.id_KhachHang
                });
            }
            cbbKhachhang.Items.AddRange(listItem.ToArray());
        }

        protected override void OnShown(EventArgs e)
        {
            base.OnShown(e);
            int i = 1;
            foreach (ChiTietOrder item in list_orders)
            {
                ListViewItem listviewItem = new ListViewItem(new string[] 
                { 
                    i + ".", 
                    BLLMonAn.Instance.GetById(item.id_MonAn).TenMonAn, 
                    item.SoLuong.ToString(), 
                    item.GiaBan.ToString("n0"), 
                    (item.SoLuong * item.GiaBan).ToString("n0") 
                });
                i++;
                listView1.Items.Add(listviewItem);
                sum = sum + item.SoLuong * item.GiaBan;
            }
            label3.Text = "₫" + sum.ToString("#,#");
            txtMaHD.Text = BLLHoaDon.Instance.AutoGeneratedId();
            txtMaNV.Text = id_NhanVien;
            txtThoigian.Text = DateTime.Now.ToString();
            txtTenKH.Enabled = false;
            txtSDT.Enabled = false;
        }

        private void butThoat_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void cbbKhachhang_TextUpdate(object sender, EventArgs e)
        {
            cbbKhachhang.Items.Clear();
            listItemFilter.Clear();
            string filter_param = cbbKhachhang.Text;
            foreach (CBBItem item in listItem)
            {
                if (item.Text.ToLower().Contains(filter_param.ToLower()))
                {
                    listItemFilter.Add(item);
                }
            }
            cbbKhachhang.Items.AddRange(listItemFilter.ToArray());
            cbbKhachhang.DroppedDown = true;
            cbbKhachhang.IntegralHeight = true;
            cbbKhachhang.SelectedIndex = -1;
            cbbKhachhang.Text = filter_param;
            cbbKhachhang.SelectionStart = filter_param.Length;
            cbbKhachhang.SelectionLength = 0;
        }

        private void butIn_Click(object sender, EventArgs e)
        {
            if (cbbKhachhang.SelectedIndex < 0 && txtTenKH.Text == "")
                MessageBox.Show("Vui lòng nhập thông tin khách hàng!");
            else
            {
                string id_KhachHang;
                if (cbbKhachhang.SelectedIndex >= 0)
                {
                    id_KhachHang = ((CBBItem)cbbKhachhang.SelectedItem).Value;
                }
                else
                {
                    if (txtTenKH.Text == "")
                    {
                        MessageBox.Show("Vui lòng nhập tên khách hàng!");
                        return;
                    }
                    if (BLLValidation.Instance.CheckName(txtTenKH.Text) == false)
                    {
                        MessageBox.Show("Tên khách hàng không hợp lệ!");
                        return;
                    }
                    if (txtSDT.Text == "")
                    {
                        MessageBox.Show("Vui lòng nhập số điện thoại!");
                        return;
                    }
                    if (BLLValidation.Instance.CheckPhoneNumber(txtSDT.Text) == false)
                    {
                        MessageBox.Show("Số điện thoại không hợp lệ!");
                        return;
                    }
                    id_KhachHang = BLLKhachHang.Instance.AutoGeneratedId();
                    if(BLLKhachHang.Instance.ExecuteAddUpdate(new KhachHang
                    {
                        id_KhachHang = id_KhachHang,
                        TenKhachHang = txtTenKH.Text,
                        SoDienThoai = txtSDT.Text,
                        NgaySinh = DateTime.Now,
                        GioiTinh = true,
                        DiaChi = ""
                    }))
                    {
                        MessageBox.Show("Cập nhật cơ sở dữ liệu thành công!");
                    }
                    else
                    {
                        MessageBox.Show("Cập nhật cơ sở dữ liệu thất bại!");
                    };
                }
                if(BLLHoaDon.Instance.LapHoaDon(list_orders, id_NhanVien, id_KhachHang))
                {
                    MessageBox.Show("In hóa đơn thành công!");
                }
                else
                {
                    MessageBox.Show("In hóa đơn thất bại!");
                }
                reloadForm();
                this.Close();
            }
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            txtTenKH.Enabled = true;
            txtSDT.Enabled = true;
            cbbKhachhang.SelectedIndex = -1;
            cbbKhachhang.Enabled = false;
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            txtTenKH.Enabled = false;
            txtTenKH.Text = "";
            txtSDT.Enabled = false;
            txtSDT.Text = "";
            cbbKhachhang.Enabled = true;
        }
    }
}
