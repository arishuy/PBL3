using PBL3.BLL;
using PBL3.DTO;
using System;
using System.Text.RegularExpressions;
using System.Windows.Forms;

namespace PBL3.View
{
    public partial class frmQLNhanvien : Form
    {
        public frmQLNhanvien()
        {
            InitializeComponent();
        }
        private void frmQLNhanvien_Load(object sender, EventArgs e)
        {
            txtMaNhanVien.Enabled = false;
            EditorEnable(false);
            Reload();
            dgvDSNhanVien.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
            dgvDSNhanVien.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
        }

        private void Reload()
        {
            dgvDSNhanVien.DataSource = BLLNhanVien.Instance.GetAll();
            txtSearch.Text = "";
            cbbSearch.SelectedIndex = -1;
        }

        public void EditorEnable(bool b)
        {
            txtTenNhanVien.Enabled = b;
            txtSoDienThoai.Enabled = b;
            txtDiaChi.Enabled = b;
            dpNgaySinh.Enabled = b;
            groupBox2.Enabled = b;
            btnLuu.Enabled = b;
            btnHuy.Enabled = b;
            btnThem.Enabled = !b;
            btnSua.Enabled = !b;
            btnXoa.Enabled = !b;
            dgvDSNhanVien.Enabled = !b;
            txtSearch.Enabled = !b;
            cbbSearch.Enabled = !b;
            btnSearch.Enabled = !b;
        }

        public void EditorReset()
        {
            txtMaNhanVien.Text = "";
            txtDiaChi.Text = "";
            txtSoDienThoai.Text = "";
            txtTenNhanVien.Text = "";
            rbMale.Checked = false;
            rbFemale.Checked = false;
            dpNgaySinh.Value = DateTime.Now;
        }

        private void dgvDSNhanVien_SelectionChanged(object sender, EventArgs e)
        {
            if (dgvDSNhanVien.SelectedRows.Count == 1)
            {
                string id = dgvDSNhanVien.SelectedRows[0].Cells["id_NhanVien"].Value.ToString();
                NhanVien nv = BLLNhanVien.Instance.GetById(id);
                txtMaNhanVien.Text = nv.id_NhanVien;
                txtTenNhanVien.Text = nv.TenNhanVien;
                txtSoDienThoai.Text = nv.SoDienThoai;
                txtDiaChi.Text = nv.DiaChi;
                if ((bool)nv.GioiTinh)
                {
                    rbMale.Checked = true;
                }
                else
                {
                    rbFemale.Checked = true;
                }
                dpNgaySinh.Value = nv.NgaySinh;
            }
        }

        private void dgvDSNhanVien_DataBindingComplete(object sender, DataGridViewBindingCompleteEventArgs e)
        {
            dgvDSNhanVien.Columns["id_NhanVien"].HeaderText = "Mã nhân viên";
            dgvDSNhanVien.Columns["TenNhanVien"].HeaderText = "Tên nhân viên";
            dgvDSNhanVien.Columns["NgaySinh"].HeaderText = "Ngày sinh";
            dgvDSNhanVien.Columns["GioiTinh"].HeaderText = "Giới tính";
            dgvDSNhanVien.Columns["SoDienThoai"].HeaderText = "Số điện thoại";
            dgvDSNhanVien.Columns["DiaChi"].HeaderText = "Địa chỉ";
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            EditorReset();
            txtMaNhanVien.Text = BLLNhanVien.Instance.AutoGeneratedId();
            EditorEnable(true);
        }
        private void btnSua_Click(object sender, EventArgs e)
        {
            if (dgvDSNhanVien.SelectedRows.Count == 1)
            {
                EditorEnable(true);
            }
        }
        private void btnLuu_Click(object sender, EventArgs e)
        {
            if (txtTenNhanVien.Text == "")
            {
                MessageBox.Show("Vui lòng nhập tên nhân viên!");
                return;
            }
            if (BLLValidation.Instance.CheckName(txtTenNhanVien.Text) == false)
            {
                MessageBox.Show("Tên nhân viên không hợp lệ!");
                return;
            }
            if ((DateTime.Now.Year - dpNgaySinh.Value.Year) < 16)
            {
                MessageBox.Show("Ngày sinh không hợp lệ!");
                return;
            }
            if (rbMale.Checked == false && rbFemale.Checked == false)
            {
                MessageBox.Show("Vui lòng chọn giới tính!");
                return;
            }
            if (txtSoDienThoai.Text == "")
            {
                MessageBox.Show("Vui lòng nhập số điện thoại!");
                return;
            }
            if (BLLValidation.Instance.CheckPhoneNumber(txtSoDienThoai.Text) == false)
            {
                MessageBox.Show("Số điện thoại không hợp lệ!");
                return;
            }
            if (txtDiaChi.Text == "")
            {
                MessageBox.Show("Vui lòng nhập địa chỉ!");
                return;
            }

            if(BLLNhanVien.Instance.ExecuteAddUpdate(new NhanVien
            {
                id_NhanVien = txtMaNhanVien.Text,
                TenNhanVien = txtTenNhanVien.Text,
                NgaySinh = dpNgaySinh.Value,
                GioiTinh = rbMale.Checked,
                SoDienThoai = txtSoDienThoai.Text,
                DiaChi = txtDiaChi.Text
            }))
            {
                MessageBox.Show("Cập nhật cơ sở dữ liệu thành công!");
            }
            else
            {
                MessageBox.Show("Cập nhật cơ sở dữ liệu thất bại!");
            }
            EditorEnable(false);
            Reload();
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            if (dgvDSNhanVien.SelectedRows.Count == 1)
            {
                string id = dgvDSNhanVien.SelectedRows[0].Cells["id_NhanVien"].Value.ToString();
                DialogResult dr = MessageBox.Show("Bạn muốn xóa nhân viên có ID '" + id + "'?", "Xác nhận xóa", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                if (dr == DialogResult.OK)
                {
                    if (id == "NV000")
                    {
                        MessageBox.Show("Không thể xóa admin!");
                    }
                    else
                    {
                        if (BLLNhanVien.Instance.Delete(id))
                        {
                            MessageBox.Show("Xóa thành công!");
                        }
                        else
                        {
                            MessageBox.Show("Xóa thất bại!");
                        }
                        Reload();
                    }
                }
            }
        }

        private void btnHuy_Click(object sender, EventArgs e)
        {
            dgvDSNhanVien_SelectionChanged(sender, e);
            EditorEnable(false);
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            if (cbbSearch.SelectedIndex >= 0)
            {
                if (cbbSearch.SelectedIndex == 0)
                {
                    if (txtSearch.Text == "")
                    {
                        Reload();
                    }
                    else
                    dgvDSNhanVien.DataSource = BLLNhanVien.Instance.SearchById(txtSearch.Text);
                }
                if (cbbSearch.SelectedIndex == 1)
                {
                    if (txtSearch.Text == "")
                    {
                        Reload();
                    }
                    else
                        dgvDSNhanVien.DataSource = BLLNhanVien.Instance.SearchByTenNhanVien(txtSearch.Text);
                }
                if (cbbSearch.SelectedIndex == 2)
                {
                    if (txtSearch.Text == "")
                    {
                        Reload();
                    }
                    else
                        dgvDSNhanVien.DataSource = BLLNhanVien.Instance.SearchBySoDienThoai(txtSearch.Text);
                }
                if (cbbSearch.SelectedIndex == 3)
                {
                    if (txtSearch.Text == "")
                    {
                        Reload();
                    }
                    else
                        dgvDSNhanVien.DataSource = BLLNhanVien.Instance.SearchByDiaChi(txtSearch.Text);
                }
            }
        }

        private void btnReload_Click(object sender, EventArgs e)
        {
            Reload();
            EditorEnable(false);
        }

        private void btnReset_Click(object sender, EventArgs e)
        {
            if (dgvDSNhanVien.SelectedRows.Count == 1)
            {
                string id_NhanVien = dgvDSNhanVien.SelectedRows[0].Cells[0].Value.ToString();
                DialogResult dr = MessageBox.Show("Bạn muốn reset nhân viên có ID '" + id_NhanVien + "'?", "Xác nhận reset", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
                if (dr == DialogResult.OK)
                {
                    if (BLLNhanVien.Instance.ResetAccount(id_NhanVien))
                    {
                        MessageBox.Show("Reset tài khoản thành công!");
                    }
                    else
                    {
                        MessageBox.Show("Reset tài khoản thất bại!");
                    };
                    Reload();
                }
            }
        }
    }
}
